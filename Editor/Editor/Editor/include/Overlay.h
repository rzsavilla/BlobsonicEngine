////////////////////////////////////////////////////////////
//
// Overlay.h
//
// Uses Overlay.cpp
//
////////////////////////////////////////////////////////////

#ifndef OVERLAY_H
#define OVERLAY_H

#include <SFML/Graphics.hpp>
#include <iostream>
#include "Button.h"

using namespace std;
using namespace sf;

class Overlay : public Drawable , public Clickable
{
public:
	////////////////////////////////////////////////////////////
	/// \brief Default Constructor
	///
	/// Creates an empty overlay
	///
	////////////////////////////////////////////////////////////
	Overlay();

	////////////////////////////////////////////////////////////
	/// \brief Overloaded Constructor
	///
	/// Creates an overlay with the following parameters
	///
	///\param vector2f postition position of overlay
	///\param vector2f size size of the overlay
	///\param string text for the overlay
	///
	////////////////////////////////////////////////////////////
	Overlay(Vector2f position , Vector2f size, string text);

	////////////////////////////////////////////////////////////
	/// \brief draw function
	///
	/// draws the overlay and button
	///
	////////////////////////////////////////////////////////////
	void draw(RenderTarget& target, RenderStates states) const;


	bool m_bDraw = true;

private:

	Texture m_sfTexture;
	Text m_sfText;
	Font m_sfFont;

	

	///////////////////////////////////////////////////////////
	/// \brief Sprite for the overlay
	////////////////////////////////////////////////////////////
	Sprite m_sfSprite;

	///////////////////////////////////////////////////////////
	/// \brief Rect for the Overlay
	////////////////////////////////////////////////////////////
	RectangleShape m_sfRect;

};
#endif
